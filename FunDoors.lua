-- "this script sucks coz its obfuscated" Message by random skid
-- Thanks for obfuscate https://luaobfuscator.com/

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==4) then function v25()local v31=v24();local v32=v24();local v33=1 + 0 ;local v34=(v21(v32,2 -1 ,20) * ((5 -3)^(489 -(5 + 259 + 193)))) + v31 ;local v35=v21(v32,21,112 -((1849 -(104 + 1677)) + 13) );local v36=((v21(v32,(11 + 39) -18 )==(4 -3)) and  -(1 + 0)) or (1 + 0) ;if (v35==(563 -(340 + 223))) then if (v34==0) then return v36 * (1072 -((2431 -1468) + 109)) ;else v35=1989 -(578 + 1410) ;v33=0;end elseif (v35==(3852 -(153 + 1652))) then return ((v34==(0 + 0)) and (v36 * (1/(0 + 0)))) or (v36 * NaN) ;end return v8(v36,v35-1023 ) * (v33 + (v34/((2 + 0)^(112 -60)))) ;end v26=nil;function v26(v37)local v38;if  not v37 then local v69=0 + 0 ;while true do if (v69==(496 -(96 + 400))) then v37=v24();if (v37==(0 + 0)) then return "";end break;end end end v38=v3(v16,v19,(v19 + v37) -1 );v19=v19 + v37 ;local v39={};for v67=1 + 0 , #v38 do v39[v67]=v2(v1(v3(v38,v67,v67)));end return v6(v39);end v18=5;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v40)if (v1(v40,2)==79) then v20=v0(v3(v40,1,1));return "";else local v70=v2(v0(v40,16));if v20 then local v78=0;local v79;while true do if (v78==1) then return v79;end if (v78==0) then v79=v5(v70,v20);v20=nil;v78=1;end end else return v70;end end end);v18=1;end if (v18==1) then v21=nil;function v21(v41,v42,v43)if v43 then local v71=(v41/((4 -2)^(v42-(2 -1))))%((1896 -((301 -224) + 1817))^(((v43-((2 -1) + 0)) -(v42-(1 + 0 + 0))) + (1 -0))) ;return v71-(v71%(816 -(208 + 607))) ;else local v72=(829 -(799 + (121 -93)))^(v42-((10 -7) -2)) ;return (((v41%(v72 + v72))>=v72) and (2 -(2 -1))) or (0 + 0) ;end end v22=nil;v18=2;end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==2) then function v22()local v44=0 + 0 ;local v45;while true do if (v44==0) then v45=v1(v16,v19,v19);v19=v19 + 1 ;v44=1 + 0 ;end if (v44==(1 + 0)) then return v45;end end end v23=nil;function v23()local v46,v47=v1(v16,v19,v19 + 2 );v19=v19 + 1 + 1 ;return (v47 * (1158 -(683 + 219))) + v46 ;end v18=3;end if (v18==7) then function v30(v48,v49,v50)local v51=0;local v52;local v53;local v54;while true do if (v51==1) then v54=v48[3];return function(...)local v80=1;local v81= -1;local v82={...};local v83=v12("#",...) -1 ;local function v84()local v88=v52;local v89=v53;local v90=v54;local v91=v28;local v92={};local v93={};local v94={};for v98=0 + 0 ,v83 do if ((v98>=v90) or ((3796 -(725 + 274))>=(4107 -((78 -(51 + 1)) + 106)))) then v92[v98-v90 ]=v82[v98 + (3 -2) ];else v94[v98]=v82[v98 + ((2 + 2) -3) ];end end local v95=(v83-v90) + 1 ;local v96;local v97;while true do local v99=0 -0 ;local v100;while true do if ((v99==(232 -(4 + 228))) or (2151==(3086 + 150))) then v100=0 -0 ;while true do if ((v100==(1 + (1202 -(227 + 975)))) or (((9666 -(450 + 44)) -6646)<=(149 + 1148))) then if ((v97<=(542 -(412 + 121))) or ((246 + (1386 -(223 + 1004)))<=(22 + 3))) then if ((v97<=((53 -42) -7)) or ((7344 -3911)<=(232 + 976))) then if (((1954 -(892 + 513))<((12350 -8236) -(82 + 771))) and (v97<=((3 -2) + 0))) then if ((v97>(646 -(491 + 155))) or ((3610 -(44 + 872))>=(5207 -1506))) then v94[v96[1715 -(16 + 1697) ]]=v94[v96[1 + 2 ]];else local v121=1470 -(199 + 1271) ;local v122;local v123;while true do if (((2905 + 1275)>=(271 + 191)) and (v121==(1570 -(261 + 25 + 1283)))) then while true do if (((3398 + 1345)>=(11719 -8617)) and (v122==((0 -0) + 0))) then v123=v96[623 -(79 + 542) ];v94[v123](v13(v94,v123 + (846 -(264 + 170 + 411)) ,v96[6 -3 ]));break;end end break;end if ((4971>=(18 + (7433 -5106))) and (v121==0)) then v122=197 -(80 + 117) ;v123=nil;v121=513 -(421 + 91) ;end end end elseif (((1603 -(155 + 854))<=(441 + 765)) and (v97<=(1092 -(226 + 864)))) then local v124=0 -0 ;local v125;local v126;local v127;while true do if (((1681 + 352)>1539) and (v124==1)) then v127=nil;while true do if (((179 + 4321)>(1980 -986)) and (v125==(1 + (0 -0)))) then v94[v126 + 1 + 0 ]=v127;v94[v126]=v127[v96[4]];break;end if (((2295 -(979 + 540))<=(2991 -(1395 + 410))) and (v125==(0 -0))) then local v173=0 -0 ;while true do if ((1760==(2422 -(641 + 21))) and (v173==0)) then v126=v96[1893 -(395 + 1496) ];v127=v94[v96[1 + 2 ]];v173=(1356 -(929 + 426)) + 0 ;end if ((((46 -(13 + 9)) + 334)<(961 + 3255)) and (v173==(1 -0))) then v125=500 -(153 + 346) ;break;end end end end break;end if (((3685 -(71 + 29))>=(18 + 29)) and (v124==0)) then v125=0 -0 ;v126=nil;v124=1 + 0 + 0 ;end end elseif ((v97==(4 -1)) or ((1064 -829)==(9 + 31))) then v94[v96[1901 -((751 -(68 + 308)) + 1524) ]]=v50[v96[1542 -(148 + (1622 -(45 + 186))) ]];else v94[v96[725 -((656 -(8 + 28)) + 103) ]]=v96[1782 -(1127 + 538 + 114) ];end elseif (((3827 -(69 + 118))>=(2642 -(261 + 418))) and (v97<=(29 -23))) then if (((1895 -1270)<((1968 + 924) -1628)) and (v97>(1042 -(28 + 1009)))) then v94[v96[1014 -(786 + 226) ]][v96[2 + 1 ]]=v94[v96[4]];else v94[v96[2 + 0 ]][v96[9 -6 ]]=v96[(8 + 4) -8 ];end elseif (((2451 -(733 + 218 + 97))<=4386) and (v97<=(22 -15))) then do return;end elseif ((v97>(39 -31)) or ((854 + 396 + 962)<(5017 -3880))) then local v151=1569 -(433 + 1136) ;local v152;local v153;while true do if ((v151==(1 + 0 + 0)) or ((1393 -681)==(2272 -933))) then while true do if (((212 -90)<(1857 + 3017)) and (v152==(1196 -(53 + 1143)))) then v153=v96[2];v94[v153]=v94[v153](v13(v94,v153 + 1 ,v81));break;end end break;end if (((2578 -(365 + 414))<=(1021 + 2559)) and (v151==(0 + 0))) then v152=0 + 0 ;v153=nil;v151=1538 -(558 + 979) ;end end elseif ((v96[2 + 0 ]==v94[v96[4]]) or ((10918 -6342)<=(9546 -5071))) then v80=v80 + 1 + 0 ;else v80=v96[3 + 0 ];end elseif ((v97<=14) or ((2743 -(67 + 922))<=(401 + 634))) then if ((v97<=(851 -(424 + 416))) or ((673 + 103)>(4746 -(22 + 1266 + 219)))) then if (((92 + 742)<4344) and (v97>(622 -(185 + 427)))) then v94[v96[2]]=v94[v96[3]][v96[11 -7 ]];else local v134=0;local v135;while true do if (((0 -0)==v134) or ((3716 -(1512 + 252))>(4646 -(4507 -(1448 + 540))))) then v135=v96[3 -1 ];v94[v135](v94[v135 + 1 ]);break;end end end elseif (((4536 -((1608 -(64 + 1518)) + 1304))<=(563 + 2959)) and (v97<=(6 + 6))) then local v136=1169 -(372 + 797) ;local v137;local v138;local v139;local v140;local v141;while true do if (((486 -234)==252) and ((2 -1)==v136)) then v139=nil;v140=nil;v136=(93 -(62 + 30)) + 1 ;end if (((2254 -(614 + 199 + 609))<(631 + 1810)) and (v136==(6 -4))) then v141=nil;while true do if ((((2500 -(25 + 6)) -(253 + 366))<=3714) and ((1867 -(757 + 1109))==v137)) then v81=(v140 + v138) -((626 + 586) -((1151 -597) + 657)) ;v141=0;v137=4 -2 ;end if ((v137==0) or ((4338 + 313)<(2795 -(577 + 68 + 328)))) then v138=v96[1144 -(659 + 483) ];v139,v140=v91(v94[v138](v13(v94,v138 + (1 -0) ,v96[14 -11 ])));v137=1 -0 ;end if ((v137==(2 + 0)) or ((4145 -(562 + 126))>(7790 -4163))) then for v177=v138,v81 do local v178=(0 -0) + 0 ;local v179;local v180;while true do if ((v178==(1 -0)) or ((4165 -2861)>=(138 + 1563))) then while true do if ((((16685 -12610) -(136 + 1592))==(299 + 2048)) and (v179==(0 + 0))) then v180=0 + 0 ;while true do if ((527>(165 -92)) and ((0 + 0)==v180)) then v141=v141 + (1 -0) ;v94[v177]=v139[v141];break;end end break;end end break;end if (((1007 -356)<(15578 -11096)) and (v178==(127 -(51 + (147 -71))))) then v179=0;v180=nil;v178=1;end end end break;end end break;end if ((v136==0) or (3209<=(5793 -3052))) then v137=0;v138=nil;v136=1 -0 ;end end elseif ((v97>(4 + 9)) or (1821<=1052)) then if ((2891>2108) and (v94[v96[(2597 -(672 + 430)) -((4469 -3237) + 261) ]]==v96[5 -1 ])) then v80=v80 + (705 -(207 + 497)) ;else v80=v96[373 -(205 + 165) ];end else local v154=0 + 0 ;local v155;while true do if ((v154==(0 -(586 -(329 + 257)))) or (((1572 + 1826) -2370)<(214 + 299))) then v155=v96[962 -(501 + 459) ];v94[v155]=v94[v155]();break;end end end elseif ((v97<=(1804 -(124 + 1663))) or (852<=(546 -436))) then if ((v97<=15) or ((625 + 178)>(2889 -1397))) then local v142=904 -(25 + 879) ;local v143;local v144;while true do if (((306 + 14)<(3848 + (2106 -1608))) and (v142==(0 + 0))) then local v162=1991 -(1861 + 130) ;while true do if ((v162==(636 -(228 + 408))) or (1309==3713)) then v143=0 -(638 -(72 + 566)) ;v144=nil;v162=2 -1 ;end if ((v162==(1811 -(299 + 1407 + 104))) or (2456>=(4451 -(1343 + 262)))) then v142=1 + 0 ;break;end end end if (((2643 -(1220 + 392))<=(5674 -(1404 + 511))) and (v142==(481 -(11 + 469)))) then while true do if ((v143==(1574 -(701 + 873))) or (((430 + 2722) -(1731 -(54 + 110)))<(1145 + 286))) then v144=v96[2 -0 ];v94[v144]=v94[v144](v13(v94,v144 + (1705 -(45 + 1659)) ,v96[2 + 1 ]));break;end end break;end end elseif ((v97==(1726 -(1689 + 21))) or (2301==4906)) then v80=v96[5 -(1137 -(879 + 256)) ];else v94[v96[2 -0 ]]();end elseif ((((2067 + 3547) -3351)<=(4949 -(1211 + 465))) and (v97<=(27 -9))) then for v145=v96[2 + 0 ],v96[642 -(145 + 494) ] do v94[v145]=nil;end elseif (((13499 -9934)<=4689) and (v97==(12 + 7))) then v94[v96[1 + 1 ]]={};else v94[v96[844 -(302 + 540) ]]=v30(v89[v96[408 -((770 -(40 + 382)) + 57) ]],nil,v50);end v80=v80 + 1 + 0 ;break;end if (((3587 -(82 + 1125))>=(2926 -(344 + 507))) and (v100==(0 + 0))) then local v106=1803 -((1934 -1420) + 1289) ;while true do if ((4160>=(13469 -10483)) and (v106==1)) then v100=1;break;end if ((v106==(0 -0)) or ((7437 -4120)<=(37 -29))) then local v108=0 -0 ;while true do if ((1==v108) or ((924 + 367 + 308)>=(1934 + 635))) then v106=2 -1 ;break;end if ((v108==(0 -0)) or (2119>=(5602 -(3714 -(121 + 216))))) then v96=v88[v80];v97=v96[(656 -(157 + 498)) + (1999 -(1292 + 707)) ];v108=1 + 0 ;end end end end end end break;end end end end A,B=v28(v11(v84));if  not A[1] then local v101=v48[4][v80] or "?" ;error("Script error at ["   .. v101   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end if (v51==0) then v52=v48[1];v53=v48[2];v51=1;end end end return v30(v29(),{},v17)(...);end if (v18==6) then v29=nil;function v29()local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v55==(0 + 0)) then local v76=0;while true do if ((0 -0)==v76) then v56=1221 -(511 + 710) ;v57=nil;v76=1472 -(557 + 914) ;end if (v76~=1) then else v55=1 -0 ;break;end end end if (3~=v55) then else v62=nil;while true do local v85=0;local v86;local v87;while true do if (v85==0) then v86=862 -(128 + 734) ;v87=nil;v85=1;end if (v85==(1263 -(511 + 751))) then while true do if (v86==0) then v87=0 + 0 ;while true do if ((1171 -(299 + 871))~=v87) then else if (v56~=2) then else local v109=1883 -(492 + 1391) ;local v110;local v111;while true do if (v109==0) then v110=0;v111=nil;v109=1312 -(403 + 908) ;end if (v109==1) then while true do if (v110==0) then v111=695 -(218 + 477) ;while true do local v159=0;local v160;while true do if (v159~=(0 -0)) then else v160=889 -(87 + 802) ;while true do if (v160==0) then if ((0 + 0)==v111) then local v187=0;while true do if (v187~=(1228 -(152 + 1075))) then else v111=1 + 0 ;break;end if (v187~=0) then else for v191=1 + 0 ,v24() do local v192=0;local v193;local v194;while true do if (v192~=0) then else v193=299 -(231 + 68) ;v194=nil;v192=3 -2 ;end if (v192~=1) then else while true do if (v193==(1165 -(289 + 876))) then v194=v22();if (v21(v194,1,1 + 0 )==0) then local v208=0 -0 ;local v209;local v210;local v211;local v212;local v213;while true do if (v208~=0) then else v209=0;v210=nil;v208=1408 -(1329 + 78) ;end if (v208~=2) then else v213=nil;while true do if (v209~=(279 -(33 + 245))) then else local v214=0;while true do if (v214==(1 + 0)) then v209=2;break;end if (v214==0) then local v216=0;while true do if (1==v216) then v214=592 -(480 + 111) ;break;end if (v216~=0) then else v212=nil;v213=nil;v216=1;end end end end end if (v209~=0) then else local v215=1860 -(1701 + 159) ;while true do if ((0 + 0)~=v215) then else local v217=127 -(35 + 92) ;while true do if (v217~=0) then else v210=0;v211=nil;v217=1402 -(1010 + 391) ;end if (v217==1) then v215=1 + 0 ;break;end end end if (v215~=(2 -1)) then else v209=2 -1 ;break;end end end if (v209~=2) then else while true do if (v210==1) then local v218=242 -(22 + 220) ;local v219;while true do if ((0 + 0)~=v218) then else v219=0;while true do if (v219~=0) then else local v228=0;local v229;while true do if (v228~=(0 + 0)) then else v229=1639 -(1015 + 624) ;while true do if (0~=v229) then else local v232=0;while true do if (v232==(1 + 0)) then v229=1;break;end if (v232==0) then v213={v23(),v23(),nil,nil};if (v211==(219 -(54 + 165))) then local v237=0;local v238;while true do if (v237~=0) then else v238=0;while true do if ((0 -0)==v238) then v213[944 -(916 + 25) ]=v23();v213[4]=v23();break;end end break;end end elseif (v211==1) then v213[3]=v24();elseif (v211==2) then v213[1 + 2 ]=v24() -((1680 -(1453 + 225))^16) ;elseif (v211~=(96 -(17 + 76))) then else local v243=0;local v244;local v245;while true do if ((0 + 0)~=v243) then else v244=0 + 0 ;v245=nil;v243=1;end if (v243==(1 + 0)) then while true do if (v244~=0) then else v245=0 + 0 ;while true do if (v245==(0 + 0)) then v213[1880 -(328 + 1549) ]=v24() -(2^(569 -(77 + 476))) ;v213[2 + 2 ]=v23();break;end end break;end end break;end end end v232=1 -0 ;end end end if (v229~=1) then else v219=1 + 0 ;break;end end break;end end end if (v219~=(945 -(881 + 63))) then else v210=641 -(524 + 115) ;break;end end break;end end end if (v210~=2) then else local v220=710 -(433 + 277) ;local v221;local v222;while true do if (v220==(1704 -(1185 + 518))) then while true do if (v221~=(0 + 0)) then else v222=0 + 0 ;while true do if (v222~=(0 + 0)) then else local v231=957 -(88 + 869) ;while true do if (v231~=(1590 -(573 + 1017))) then else if (v21(v212,1 + 0 ,1)==1) then v213[2]=v62[v213[883 -(573 + 308) ]];end if (v21(v212,2,1711 -(980 + 729) )~=1) then else v213[5 -2 ]=v62[v213[1805 -(1063 + 739) ]];end v231=1973 -(1594 + 378) ;end if (v231==(1 -0)) then v222=1;break;end end end if (v222==(1810 -(1299 + 510))) then v210=1 + 2 ;break;end end break;end end break;end if (v220==(133 -(78 + 55))) then v221=0;v222=nil;v220=1;end end end if (v210~=0) then else local v223=0;while true do if ((1 + 0)==v223) then v210=1;break;end if ((979 -(870 + 109))~=v223) then else local v227=548 -(414 + 134) ;while true do if (v227~=1) then else v223=1;break;end if (v227~=0) then else local v230=0;while true do if (v230~=(1404 -(1090 + 313))) then else v227=1;break;end if (v230~=(956 -(290 + 666))) then else v211=v21(v194,2,3);v212=v21(v194,13 -9 ,1167 -(79 + 1082) );v230=1;end end end end end end end if (v210==3) then if (v21(v212,4 -1 ,1 + 2 )==1) then v213[4]=v62[v213[4]];end v57[v191]=v213;break;end end break;end end break;end if (v208==1) then v211=nil;v212=nil;v208=2 + 0 ;end end end break;end end break;end end end for v195=1 + 0 ,v24() do v58[v195-(2 -1) ]=v29();end v187=1;end end end if (v111==(1687 -(24 + 1662))) then local v188=0 -0 ;local v189;while true do if (v188==(0 -0)) then v189=0;while true do if ((0 -0)==v189) then for v204=1,v24() do v59[v204]=v24();end return v60;end end break;end end end break;end end break;end end end break;end end break;end end end break;end if (v87==(0 + 0)) then local v107=0;while true do if (v107~=(1123 -(847 + 275))) then else v87=1;break;end if ((0 -0)~=v107) then else if (v56==(1 + 0)) then local v114=0 -0 ;local v115;local v116;while true do if (v114==1) then while true do if (v115==(0 + 0)) then v116=1957 -(1837 + 120) ;while true do if ((1 + 0)~=v116) then else local v181=0 + 0 ;local v182;while true do if (0==v181) then v182=0 -0 ;while true do if (v182~=(1 + 0)) then else v116=2;break;end if (v182~=(0 -0)) then else for v197=817 -(298 + 518) ,v61 do local v198=0 -0 ;local v199;local v200;local v201;while true do if (v198==(1 + 0)) then v201=nil;while true do if (v199==(2 -1)) then if (v200==1) then v201=v22()~=0 ;elseif (v200==(594 -(371 + 221))) then v201=v25();elseif (v200==(10 -7)) then v201=v26();end v62[v197]=v201;break;end if (v199~=(1687 -(454 + 1233))) then else local v207=0 + 0 ;while true do if (v207==(0 + 0)) then v200=v22();v201=nil;v207=1 + 0 ;end if (v207==(1 -0)) then v199=1;break;end end end end break;end if ((588 -(98 + 490))==v198) then v199=1269 -(848 + 421) ;v200=nil;v198=1;end end end v60[5 -2 ]=v22();v182=1;end end break;end end end if (v116~=(1950 -(1593 + 357))) then else v61=v24();v62={};v116=1;end if (v116~=(7 -5)) then else v56=1284 -(393 + 889) ;break;end end break;end end break;end if (v114==(1741 -(1526 + 215))) then v115=1930 -(960 + 970) ;v116=nil;v114=1;end end end if (v56==0) then local v117=0 -0 ;local v118;while true do if (v117==(461 -(18 + 443))) then v118=0 + 0 ;while true do if (v118~=(1197 -(993 + 204))) then else local v165=0;local v166;while true do if (v165==(1729 -(254 + 1475))) then v166=0;while true do if (v166==(0 -0)) then v57={};v58={};v166=1 + 0 ;end if (v166~=1) then else v118=1;break;end end break;end end end if (v118~=2) then else v56=1;break;end if (v118~=(4 -3)) then else v59={};v60={v57,v58,nil,v59};v118=2;end end break;end end end v107=4 -3 ;end end end end break;end end break;end end end break;end if (v55~=(2 + 0)) then else v60=nil;v61=nil;v55=3;end if (v55~=1) then else local v77=0;while true do if (v77==(980 -(136 + 843))) then v55=2 + 0 ;break;end if (v77~=0) then else v58=nil;v59=nil;v77=1491 -(739 + 751) ;end end end end end v30=nil;v18=7;end if (v18==3) then v24=nil;function v24()local v63,v64,v65,v66=v1(v16,v19,v19 + (1378 -(1316 + 59)) );v19=v19 + 4 ;return (v66 * (7270236 + 9506980)) + (v65 * 65536) + (v64 * ((2667 -(581 + 1044)) -(413 + 373))) + v63 ;end v25=nil;v18=4;end end end vv9(),...);end
